// Cynhyrchwyd y ffeil hon yn awtomatig. PEIDIWCH Â MODIWL
// This file is automatically generated. DO NOT EDIT

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import {Call as $Call, Create as $Create} from "@wailsio/runtime";

// eslint-disable-next-line @typescript-eslint/ban-ts-comment
// @ts-ignore: Unused imports
import * as $models from "./models.js";

/**
 * CommitChanges 提交更改
 */
export function CommitChanges(path: string, message: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1426317966, path, message) as any;
    return $resultPromise;
}

/**
 * GetRemoteURL 获取远程仓库地址
 */
export function GetRemoteURL(path: string): Promise<string[]> & { cancel(): void } {
    let $resultPromise = $Call.ByID(994973775, path) as any;
    let $typingPromise = $resultPromise.then(($result) => {
        return $$createType0($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * GetUpdateFiles 获取变更文件列表
 */
export function GetUpdateFiles(path: string): Promise<$models.UpdateFiles> & { cancel(): void } {
    let $resultPromise = $Call.ByID(3191252020, path) as any;
    let $typingPromise = $resultPromise.then(($result) => {
        return $$createType1($result);
    }) as any;
    $typingPromise.cancel = $resultPromise.cancel.bind($resultPromise);
    return $typingPromise;
}

/**
 * InitGitRepository 初始化仓库
 */
export function InitGitRepository(path: string, remoteURL: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(1358622150, path, remoteURL) as any;
    return $resultPromise;
}

export function InitWordRepo(): Promise<string> & { cancel(): void } {
    let $resultPromise = $Call.ByID(906599198) as any;
    return $resultPromise;
}

/**
 * PullChanges 拉取最新代码
 */
export function PullChanges(path: string, remote: string, branch: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(4055454044, path, remote, branch) as any;
    return $resultPromise;
}

/**
 * PushChanges 推送提交
 */
export function PushChanges(path: string, remote: string, branch: string): Promise<void> & { cancel(): void } {
    let $resultPromise = $Call.ByID(7259433, path, remote, branch) as any;
    return $resultPromise;
}

// Private type creation functions
const $$createType0 = $Create.Array($Create.Any);
const $$createType1 = $models.UpdateFiles.createFrom;
